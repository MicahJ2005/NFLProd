<!-- 11.17.2023 - Sophia Murphy (Demand Chain)
    Commented out - no longer in use -->
<apex:page ><!-- controller="HostToolBulkController" showheader="true" sidebar="false" standardStylesheets="false" tabStyle="Master_Test__c">

  <!-- jQuery libraries -
  <apex:stylesheet value="{!URLFOR($Resource.jQueryDCS,'/css/redmond/jquery-ui-1.10.3.custom.min.css')}" />
  <apex:stylesheet value="//cdn.datatables.net/1.10.3/css/jquery.dataTables.min.css" />

  <apex:includeScript value="{!URLFOR($Resource.jQueryDCS,'/js/jquery-1.8.0.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.jQueryDCS,'/js/jquery-ui-1.8.23.custom.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.jQueryDCS,'/moment/moment.js')}" />
  <apex:includeScript value="//cdn.datatables.net/1.10.3/js/jquery.dataTables.min.js" />
  <apex:includeScript value="https://jquery-datatables-row-grouping.googlecode.com/svn/trunk/media/js/jquery.dataTables.rowGrouping.js" />

  <style>
    
    .dirtyRow {
      background-color: red !important;
    }

    .savedRow {
      background-color: green !important;
    }

    .showQuota {
      cursor: pointer;
    }

    .assignDOT {
      cursor: pointer;
    }

    .pairCol {
      background-color: #544F4F !important;
    }

    .sortHidden {
      display: none;
    }

    .divSessionHeaderLarge {
        float: left;
        font-size: 14pt;
        font-weight: bold;
        padding: 2px 10px 2px 2px;
        display: table-cell;
        vertical-align: bottom;
    }

    .divSessionHeaderSmall {
        float: left;
        font-size: 10pt;
        padding: 2px 10px 2px 2px;
        display: table-cell;
        vertical-align: bottom;
    }

  </style>

  <script>
    j$ = jQuery.noConflict();

    j$.fn.dataTable.ext.order['dom-select'] = function  ( settings, col )
    {
        return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
            return j$('select', td).val();
        } );
    }

    j$.fn.dataTable.ext.order['dom-text-numeric'] = function  ( settings, col )
    {
        return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
            return j$('input', td).val() * 1;
        } );
    }


    var masterTestId = '';
    var masterTestName = '';
    var objTestedOptions = '';
    var G_PAIRS = false;

    j$(document).ready(function () {

        j$( "#dialog-modal" ).dialog({
          autoOpen: false,
          height: 150,
          width: 400,
          modal: true,
          resizable: false,
          draggable: false
        });

        j$( "#dialog-quota" ).dialog({
          autoOpen: false,
          height: 400,
          width: 500,
          modal: true,
          resizable: false,
          draggable: false,
          buttons: {
              Close: function() {
                  j$(this).dialog( "close" );
              }
          }
        });

        j$( "#dialog-dotchecks" ).dialog({
          autoOpen: false,
          height: 400,
          width: 500,
          modal: true,
          resizable: false,
          draggable: false,
          buttons: {
              Close: function() {
                  j$(this).dialog( "close" );
              }
          }
        });

        j$(document).on("change", '#selMasterTest', function() {
            masterTestId = j$(this).val();
            populateCriteriaSession(masterTestId);
        });

        j$(document).on("change", '#selSessions, #selView', function() {
            if(masterTestId != null && masterTestId != '') {
                fillProgressTracker(masterTestId);
                fillRespondents(masterTestId, j$("#selSessions").val(), j$('#selView').val(), j$("#txtRespSearch").val());
            }
        });

        j$(document).on("click", '#btnSearch, #btnRefresh', function() {
            if(masterTestId != null && masterTestId != '') {
                fillProgressTracker(masterTestId);
                fillRespondents(masterTestId, j$("#selSessions").val(), j$("#selView").val(), j$("#txtRespSearch").val());
            }
        });

        j$(document).on("click", '#btnShowReport', function() {
            if(masterTestName != null && masterTestName != '') {
                window.location.href = '/00OU00000024f2S?pv0=' + masterTestName;
            }
        });

        j$(document).on("change", '.saveOnChange', function() {
          var elRow = j$(this).closest('tr');
          saveRespondentRow(elRow, j$(this).attr('data-rid'), j$(this).attr('data-hid'));

          // Pair Logic
          if(j$(this).hasClass('statusField') && j$(elRow).next('tr.row-details')) {
            var strStatus = j$(this).val();
            j$(elRow).nextUntil('tr.row-pairprimary').each(function() {
              console.log('setting child status');
              elChildStatusField = j$(this).find('.statusField');
              j$(elChildStatusField).val(strStatus);
              j$(elChildStatusField).change();
            });
          }

        });

        j$(document).on("click", '.assignDOT', function() {

          console.log(j$(this));
          var trid = j$(this).attr('data-trid');

          Visualforce.remoting.Manager.invokeAction('HostToolBulkController.listDOTChecksForTest',
          j$(this).attr('data-testid'),
            function(result, event){

                elTableBody = j$('#dialog-dotchecks').find('tbody');
                elTableBody.empty();

                if(result.length == 0) {
                  strHTML = '<tr>';
                  strHTML+= '<td colspan=\"3\">There are no more DOT checks generated to assign!</td>';
                  strHTML+= '</tr>';
                  elTableBody.append(strHTML);
                }
                
                for(var i = 0; i < result.length; i++) {
                  strHTML = '<tr>';
                  strHTML+= '<td><input type=\"button\" class=\"btnAssignDOT\" data-trid=\"' + trid + '\" data-dotid=\"' + result[i].Id + '\" value=\"Assign DOT Check\" /></td>';
                  strHTML+= '<td>$' + parseFloat(result[i].Check_Amount__c, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + '</td>';
                  strHTML+= '<td>' + result[i].Check_Number__c + '</td>';
                  strHTML+= '</tr>';
                  elTableBody.append(strHTML);
                }

                j$( "#dialog-dotchecks" ).dialog( "open" );
            }, 
            {escape: true}
          );
        });

        j$(document).on("click", '.btnAssignDOT', function() {

          Visualforce.remoting.Manager.invokeAction('HostToolBulkController.updateTRWithDOTCheck',
          j$(this).attr('data-dotid'),
          j$(this).attr('data-trid'),
            function(result, event){
              afRefreshQuery();
              j$( "#dialog-dotchecks" ).dialog("close");
            }, 
            {escape: true}
          );
          

        });

        j$(document).on("keyup", '.ridField', function() {
          console.log('Setting previous sortHidden to value of ' + j$(this).val());
          j$(this).parent().prev('.sortHidden').html(j$(this).val());
          j$(this).parents("table").trigger("update");

        });

        j$(document).on("click", '.showQuota', function() {

          // Find paragraph in dialog-quota
          j$('#fsDonation').empty();
          j$('#fsQuotas').empty();
          j$('#fsAttributes').empty();

          // Set Donation Information
          var strHTMLQuotas = '<table><tr><th>Organization</th><th>Amount</th></tr>';
          strHTMLQuotas+= '<tr><td>' + j$(this).attr('data-organization') + '</td><td>' + j$(this).attr('data-amount') + '</td></tr>';
          j$('#fsDonation').html(strHTMLQuotas);


          // Bring Quota Information in
          Visualforce.remoting.Manager.invokeAction('HostToolBulkController.respondentQuota',
          j$(this).attr('data-id'),
            function(result, event){
                var strHTMLQuotas = '<table><tr><th>Key</th><th>Value</th></tr>';
                var strHTMLAttributes = '<table><tr><th>Key</th><th>Value</th></tr>';

                if(result.length == 0) {
                  strHTMLQuotas+= '<tr><td colSpan=\"2\">No Quota Information Found!</td><tr>';  
                }

                for(var i = 0; i < result.length; i++) {
                  if(result[i].key.indexOf('conditions') > -1) {
                    strValue = result[i].value;
                    if(strValue == '1') { strValue = 'Qualified'; } else { strValue = 'Did not Qualify'; }
                    strHTMLQuotas+= '<tr><td>' + result[i].key + '</td><td>' + strValue + '</td></tr>';  
                  } else {
                    strHTMLAttributes+= '<tr><td>' + result[i].key + '</td><td>' + result[i].value + '</td></tr>';  
                  }
                  
                }
                strHTMLQuotas+='</table>';
                strHTMLAttributes+='</table>';
                j$('#fsQuotas').html(strHTMLQuotas);
                j$('#fsAttributes').html(strHTMLAttributes);
                j$( "#dialog-quota" ).dialog( "open" );
            }, 
            {escape: true}
          );

        });

        ///////////////////////////////
        // Start Up UI Elements
        ///////////////////////////////
        statusShow();
        populateTestedStatusList();
        populateCriteriaView();
        populateCriteriaTest();
        console.log('Done Running Initial UI');
        statusHide();

    });

    function htmlDecodeSFDCJSON(value) {
        if (value) { return j$('<div />').html(value).text(); } 
            else { return ""; }
    }

    function populateTestedStatusList() {

        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.testedStatusOptions',
            function(result, event){

                var objJSON = j$.parseJSON(htmlDecodeSFDCJSON(result));
                objTestedOptions = objJSON;
            }, 
            {escape: true}
        );
    }

    function createTestedStatusList(selectedOption) {

        var elSelect = j$('<select size="1" multiselect="false" />');
        j$(objTestedOptions).each(function() {
            elSelect.append(j$('<option>').attr('value', this).text(this));
        });

        j$(elSelect).val(selectedOption);

        return elSelect;

    }

    function populateCriteriaTest() {

        elSelect = j$("#selMasterTest");
        j$("#divProgressTracker").show();

        // Clear all previous options
        j$(elSelect).empty();

        // Bring Quota Information in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.lstProjects',
            function(result, event){
                j$(elSelect)
                    .append(j$("<option></option>")
                    .attr("value","")
                    .text(" -- Choose a Test -- "));

                for(var i = 0; i < result.length; i++) {
                    j$(elSelect)
                        .append(j$("<option></option>")
                        .attr("value",result[i].Id)
                        .text(result[i].Opportunity_Name__c));
                }
            }, 
            {escape: true}
        );
    }

    function populateCriteriaSession(masterTestId) {

        var elSelect = j$("#selSessions");

        // Clear all previous options
        j$(elSelect).empty();

        // Bring Quota Information in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.lstSessions',
            masterTestId,
            function(result, event){
                j$(elSelect)
                    .append(j$("<option></option>")
                    .attr("value","")
                    .text(" -- Choose a Session -- "));

                for(var i = 0; i < result.length; i++) {

                    // Set MT Name
                    masterTestName = result[i].Related_Test__r.Name;

                    // Set Sessions
                    strLocation = 'No Location Defined';
                    if(typeof result[i].Testing_Location__c != 'undefined') {
                        strLocation = result[i].Testing_Location__r.Name;
                    }
                    strText = result[i].Name + ' - ' + strLocation + ' - ' + result[i].Session_Length__c + ' mins';

                    j$(elSelect)
                        .append(j$("<option></option>")
                        .attr("value",result[i].Id)
                        .text(strText));
                }

                // Fill Progress Tracker and FS
                fillProgressTracker(masterTestId);
                fillMasterTestFS(masterTestId);
                fillRespondents(masterTestId, null, j$("#selView").val(), j$("#txtRespSearch").val());
            }, 
            {escape: true}
        );
    }

    function populateCriteriaView() {

        var elSelect = j$("#selView");

        // Clear all previous options
        j$(elSelect).empty();

        // Bring Quota Information in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.lstViewTypes',
            function(result, event){
                for(var i = 0; i < result.length; i++) {
                    j$(elSelect)
                        .append(j$("<option></option>")
                        .attr("value",result[i])
                        .text(result[i]));
                }
            }, 
            {escape: true}
        );
    }

    function fillProgressTracker(masterTestId) {

        var elWrapper = j$("#tblProgressTracker");
        var strHTML = '';
        j$(elWrapper).empty();

        if(masterTestId == '' || masterTestId == null) { return; }

        // Bring Quota Information in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.trackerStats',
            masterTestId,
            function(result, event){

                statusShow();

                strHTML = '<tr class="headerRow">';
                for(var index in result) {
                    strHTML+= '<th class="headerRow" style="text-align: center !important;">' + index + '</th>';
                }
                strHTML+= '</tr>';

                strHTML+= '<tr class="dataRow">';
                for(var index in result) {
                    strHTML+= '<td class="dataCell" align="center">' + result[index] + '</td>';
                }
                strHTML+= '</tr>';

                j$(elWrapper).append(strHTML);

                statusHide();
            }, 
            {escape: true}
        );
    }

    function fillMasterTestFS(masterTestId) {

        var elWrapper = j$("#pbMasterTestFS");
        var strHTML = '';
        j$(elWrapper).empty();

        if(masterTestId == '' || masterTestId == null) { return; }

        // Bring MT FS in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.mtFieldSet',
            masterTestId,
            function(result, event){

                statusShow();

                j$(elWrapper).append(strHTML);

                statusHide();
            }, 
            {escape: true}
        );

    }

    function fillRespondents(masterTestId, sessionId, viewType, respSearch) {

        if(sessionId == '') { sessionId = null; }
        console.log('PULLING RESPONDENTS - ' + masterTestId + ' - ' + sessionId + ' - ' + viewType + ' - ' + respSearch);

        G_PAIRS = false;

        var elWrapper = j$("#tblRespondents");
        var strHTML = '';
        j$(elWrapper).empty();

        if(masterTestId == '' || masterTestId == null) { return; }

        statusShow();

        // Bring MT FS in
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.fillRespondentList',
            masterTestId,
            sessionId,
            viewType,
            respSearch,
            function(result, event){

                console.log('PROCESSING ' + result.length + ' SESSION(S) OR OBJECT(S)');

                for(var i = 0; i < result.length; i++) {

                    // SESSION HEADER
                    if(viewType == 'Session View') {
                        var linkedSessionName = '';
                        if(typeof result[i].ses.Linked_Session__r != 'undefined') {
                            console.log('FOUND LINKED SESSION');
                            linkedSessionName = ' (linked to ' + result[i].ses.Linked_Session__r.Name + ')';
                        }

                        strHTML+= '<div class="divSessionHeaderLarge">' + result[i].ses.Name + linkedSessionName + '</div>';
                        strHTML+= '<div class="divSessionHeaderSmall"><strong>When:</strong>  ' + moment(result[i].ses.Session_Start__c).format('h:mm A') + ' to ' + moment(result[i].ses.Session_End__c).format('h:mm A') + '</div>';
                        if(typeof result[i].ses.Testing_Location__r != 'undefined') {
                            strHTML+= '<div class="divSessionHeaderSmall"><strong>Where:</strong>  ' + result[i].ses.Testing_Location__r.Name + '</div>';
                        } else {
                            strHTML+= '<div class="divSessionHeaderSmall"><strong>Where:</strong>  Not Specified</div>';
                        }

                        strHTML+= '<div class="divSessionHeaderSmall"><strong>How Many:</strong>  Goal=' + result[i].ses.Recruits_Per_Session__c + ', Scheduled=' + result[i].ses.Scheduled_Respondents__c + ' </div>';
                        strHTML+= '<div class="divSessionHeaderSmall"><strong>Type:</strong>  ' + result[i].ses.Test_Type__c + '</div>';
                        strHTML+= '<div class="divSessionHeaderSmall"><strong>Notes:</strong>  ' + result[i].ses.Recruiting_Notes__c + '</div>';
                        strHTML+= '<div class="divSessionHeaderSmall"><strong>Beacon Instructions:</strong>  ' + result[i].ses.Related_Test__r.Beacon_Condition_Instructions__c + '</div>';
                    }

                    // TABLE HEADER
                    strHTML+= '<table class="list" border="0" cellspacing="0" cellpadding="0">';
                    strHTML+= '<colgroup span="18"></colgroup><thead class="rich-table-thead">';
                    strHTML+= '<tr class="headerRow">';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:10px;"><div></div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:10px;"><div></div></th>';
                    if(sessionId == null || respSearch != '') { strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:150px;"><div>Session</div></th>'; }
                    strHTML+= '<th class="headerRow header sort-numeric" scope="col" colspan="1" style="width:30px;"><div>Resp #</div></th>';
                    strHTML+= '<th class="headerRow header sort-select" scope="col" colspan="1" style="width:100px;"><div>Status</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>First Name</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>Last Name</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>PID</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:150px;"><div>Gender</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>Age</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>Phone</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:150px;"><div>Street</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:150px;"><div>Street 2</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:100px;"><div>City</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:130px;"><div>State</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1" style="width:50px;"><div>Zip</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>Org</div></th>';
                    strHTML+= '<th class="headerRow header" scope="col" colspan="1"><div>Check</div></th>';
                    strHTML+= '<th class="headerRow header grouping-col" scope="col" colspan="1"><div>GROUPING-HIDDEN</div></th>';
                    strHTML+= '</tr></thead>';
                    strHTML+= '<tbody>';

                    // Process Respondents
                    var objTR = result[i].lstTR;
                    console.log('PROCESSING ' + objTR.length + ' PRIMARY RESPONDENTS');
                    var respHTML = '';
                    for(var r = 0; r < objTR.length; r++) {
                        var tr = objTR[r];

                        var strDonationOrg = ''; var strDonationIndicator = '';
                        if(typeof tr.tr.Organization__r != 'undefined') { strDonationOrg = tr.tr.Organization__r.Name; strDonationIndicator = 'Yes'; }
                        var strTRNumber = '';
                        if(typeof tr.tr.Respondent_Number__c != 'undefined') { strTRNumber = tr.tr.Respondent_Number__c; }
                        var strIVRNumber = '';
                        if(typeof tr.tr.Respondent__r.IVRPhone__c != 'undefined') { strIVRNumber = tr.tr.Respondent__r.IVRPhone__c; }

                        respHTML+= '<tr class="dataRow row-pairprimary" onmouseover="if (window.hiOn){hiOn(this);}" onmouseout="if (window.hiOff){hiOff(this);}" onblur="if (window.hiOff){hiOff(this);}" onfocus="if (window.hiOn){hiOn(this);}">';

                        // STATUS INDICATOR COL
                        respHTML+= '<td class="dataCell" colspan="1"></td>';

                        // PAIR INDICATOR COL
                        // respHTML+= '<td rowspan="' + tr.intRowSpan + '" class="dataCell' + tr.strPairStyle + '" colspan="1" style="width:10px;"></td>';
                        respHTML+= '<td class="dataCell' + tr.strPairStyle + '" colspan="1" style="width:10px;"></td>';

                        // ALL SESSIONS HEADER INFO
                        if(sessionId == null || respSearch != '') {
                            respHTML+= '<td class="dataCell" colspan="1">' + tr.trq.Session_Quota__r.Related_Session__r.Name + '</td>';
                        }

                        // RESPONDENT NUMBER
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= '<span class="sortHidden">' + strTRNumber + '</span><div class="requiredInput"><div class="requiredBlock"></div>';
                        respHTML+= '<input class="saveOnChange ridField" ' +
                                      'data-field="Respondent_Number__c" ' +
                                      'data-id="' + tr.tr.Id + '" ' +
                                      'data-object="Test_Respondent__c" ' +
                                      'size="20" ' +
                                      'style="width:45px;" type="text" ' +
                                      'value="' + strTRNumber + '" />';
                        respHTML+= '</div></td>';

                        // TESTED STATUS
                        respHTML+= '<td class="dataCell" colspan="1">';
                        var selStatus = createTestedStatusList(tr.tr.Tested_Status__c);
                        j$(selStatus).attr('data-object', 'Test_Respondent__c');
                        j$(selStatus).attr('data-field', 'Tested_Status__c');
                        j$(selStatus).attr('data-id', tr.tr.Id);
                        j$(selStatus).attr('data-oldvalue', tr.tr.Tested_Status__c);
                        j$(selStatus).addClass('saveOnChange');
                        j$(selStatus).addClass('statusField');
                        respHTML+= j$(selStatus)[0].outerHTML;
                        respHTML+= '</td>';

                        // FIRST NAME
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= '<div class="showQuota" data-id="' + tr.tr.Id + '" data-organization="' + strDonationOrg + '" data-amount="' + tr.tr.Donation_Amount_Per_Event__c + '">';
                        respHTML+= '<a>' + tr.tr.Respondent__r.FirstName + '</a>';
                        respHTML+= '</div></td>';

                        // LAST NAME
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= '<div class="showQuota" data-id="' + tr.tr.Id + '" data-organization="' + strDonationOrg + '" data-amount="' + tr.tr.Donation_Amount_Per_Event__c + '">';
                        respHTML+= '<a>' + tr.tr.Respondent__r.LastName + '</a>';
                        respHTML+= '</div></td>';

                        // PID
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= '<a href="/' + tr.tr.Respondent__r.Id + '" target="_blank">' + tr.tr.Respondent__r.PID__c + '</a>';
                        respHTML+= '</td>';

                        // GENDER
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= tr.tr.Respondent__r.Gender__c;
                        respHTML+= '</td>';

                        // AGE
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= tr.tr.Respondent__r.Age__c;
                        respHTML+= '</td>';

                        // PHONE
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= strIVRNumber;
                        respHTML+= '</td>';

                        // STREET

                        if(typeof tr.hc == 'undefined') {
                          respHTML+= '<td class="dataCell" colspan="1" />';
                          respHTML+= '<td class="dataCell" colspan="1" />';
                          respHTML+= '<td class="dataCell" colspan="1" />';
                          respHTML+= '<td class="dataCell" colspan="1" />';
                          respHTML+= '<td class="dataCell" colspan="1" />';
                        } else {
                          respHTML+= '<td class="dataCell" colspan="1">';
                          respHTML+= '<input class="saveOnChange" ' +
                                        'data-field="MailingStreet__c" ' +
                                        'data-id="' + tr.hc.Household__c + '" ' +
                                        'data-object="Household__c" ' +
                                        'style="width:150px;" type="text" ' +
                                        'value="' + ((typeof tr.hc != 'undefined') ? checkIfNull(tr.hc.Household__r.MailingStreet__c) : '') + '" />';
                          respHTML+= '</td>';

                          // STREET 2
                          respHTML+= '<td class="dataCell" colspan="1">';
                          respHTML+= '<input class="saveOnChange" ' +
                                        'data-field="MailingStreet2__c" ' +
                                        'data-id="' + tr.hc.Household__c + '" ' +
                                        'data-object="Household__c" ' +
                                        'style="width:150px;" type="text" ' +
                                        'value="' + ((typeof tr.hc != 'undefined') ? checkIfNull(tr.hc.Household__r.MailingStreet2__c) : '') + '" />';
                          respHTML+= '</td>';

                          // CITY
                          respHTML+= '<td class="dataCell" colspan="1">';
                          respHTML+= '<input class="saveOnChange" ' +
                                        'data-field="MailingCity__c" ' +
                                        'data-id="' + tr.hc.Household__c + '" ' +
                                        'data-object="Household__c" ' +
                                        'style="width:100px;" type="text" ' +
                                        'value="' + ((typeof tr.hc != 'undefined') ? checkIfNull(tr.hc.Household__r.MailingCity__c) : '') + '" />';
                          respHTML+= '</td>';

                          // STATE
                          respHTML+= '<td class="dataCell" colspan="1">';
                          respHTML+= '<input class="saveOnChange" ' +
                                        'data-field="MailingState__c" ' +
                                        'data-id="' + tr.hc.Household__c + '" ' +
                                        'data-object="Household__c" ' +
                                        'style="width:30px;" type="text" ' +
                                        'value="' + ((typeof tr.hc != 'undefined') ? checkIfNull(tr.hc.Household__r.MailingState__c) : '') + '" />';
                          respHTML+= '</td>';

                          // ZIP
                          respHTML+= '<td class="dataCell" colspan="1">';
                          respHTML+= '<input class="saveOnChange" ' +
                                        'data-field="MailingPostalCode__c" ' +
                                        'data-id="' + tr.hc.Household__c + '" ' +
                                        'data-object="Household__c" ' +
                                        'style="width:50px;" type="text" ' +
                                        'value="' + ((typeof tr.hc != 'undefined') ? checkIfNull(tr.hc.Household__r.MailingPostalCode__c) : '') + '" />';
                          respHTML+= '</td>';
                        }

                        // ORG
                        respHTML+= '<td class="dataCell" colspan="1">';
                        respHTML+= strDonationIndicator;
                        respHTML+= '</td>';

                        // CHECK
                        respHTML+= '<td class="dataCell" colspan="1">';
                        if(typeof tr.tr.Check_Number__c == 'undefined') {
                            respHTML+= '<span class="assignDOT" ' +
                                    'data-testid="' + masterTestId + '" ' +
                                    'data-sessionid="' + tr.trq.Session_Quota__r.Related_Session__c + '" ' +
                                    'data-trid="' + tr.tr.Id + '">NO CHECK</span>';
                        } else {
                            respHTML+= tr.tr.Check_Number__c + ' / $' + tr.tr.Check_Amount__c.toFixed(2);
                        }
                        
                        respHTML+= '</td>';

                        // GROUPING COLUMN
                        respHTML+= '<td colSpan="1" class="grouping-col">';
                        respHTML+= '(' + tr.tr.Respondent__r.PID__c + ') ' + tr.tr.Respondent__r.FirstName + ' ' + tr.tr.Respondent__r.LastName;
                        respHTML+= '</td>';

                        // END PARENT ROW
                        respHTML+= '</tr>';

                        ///////////////////////////
                        // START PAIR ROWS
                        ///////////////////////////
                        var objTRP = tr.lstPairs;
                        var pairHTML = '';
                        for(var p = 0; p < objTRP.length; p++) {
                            G_PAIRS = true;
                            var trp = objTRP[p];
                            var strPairTRNumber = '';
                            if(typeof trp.Respondent_Number__c != 'undefined') { strPairTRNumber = trp.Respondent_Number__c; }

                            pairHTML+='<tr class="dataRow row-details expand-child" onmouseover="if (window.hiOn){hiOn(this);}" onmouseout="if (window.hiOff){hiOff(this);}" onblur="if (window.hiOff){hiOff(this);}" onfocus="if (window.hiOn){hiOn(this);}">';

                            // STATUS COL
                            pairHTML+='<td class="dataCell" colspan="1"></td>';

                            // PAIR INDICATOR COL
                            pairHTML+= '<td class="dataCell' + tr.strPairStyle + '" colspan="1" style="width:10px;"></td>';

                            // ALL SESSIONS INFO COL
                            if(sessionId == null || respSearch != '') {
                                pairHTML+= '<td class="dataCell" colspan="1">' + tr.trq.Session_Quota__r.Related_Session__r.Name + '</td>';
                            }

                            // RESPONDENT NUMBER
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= '<span class="sortHidden">' + strTRNumber + '</span><div class="requiredInput"><div class="requiredBlock"></div>';
                            pairHTML+= '<input class="saveOnChange ridField" ' +
                                          'data-field="Respondent_Number__c" ' +
                                          'data-id="' + trp.Id + '" ' +
                                          'data-object="Test_Respondent__c" ' +
                                          'size="20" ' +
                                          'style="width:45px;" type="text" ' +
                                          'value="' + strPairTRNumber + '" />';
                            pairHTML+= '</div></td>';

                            // TESTED STATUS
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            var selStatus = createTestedStatusList(trp.Tested_Status__c);
                            j$(selStatus).attr('data-object', 'Test_Respondent__c');
                            j$(selStatus).attr('data-field', 'Tested_Status__c');
                            j$(selStatus).attr('data-id', trp.Id);
                            j$(selStatus).attr('data-oldvalue', trp.Tested_Status__c);
                            j$(selStatus).addClass('saveOnChange');
                            j$(selStatus).addClass('statusField');
                            // j$(selStatus).val(trp.Tested_Status__c);
                            pairHTML+= j$(selStatus)[0].outerHTML;
                            pairHTML+= '</td>';

                            // FIRST NAME
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= '<div class="showQuota" data-id="' + trp.Id + '">';
                            pairHTML+= '<a>' + trp.Respondent__r.FirstName + '</a>';
                            pairHTML+= '</div></td>';

                            // LAST NAME
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= '<div class="showQuota" data-id="' + trp.Id + '">';
                            pairHTML+= '<a>' + trp.Respondent__r.LastName + '</a>';
                            pairHTML+= '</div></td>';

                            // PID
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= '<a href="/' + trp.Respondent__r.Id + '" target="_blank">' + trp.Respondent__r.PID__c + '</a>';
                            pairHTML+= '</td>';

                            // GENDER
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= trp.Respondent__r.Gender__c;
                            pairHTML+= '</td>';

                            // AGE
                            pairHTML+= '<td class="dataCell" colspan="1">';
                            pairHTML+= trp.Respondent__r.Age__c;
                            pairHTML+= '</td>';

                            // END AND CLOSE
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';
                            pairHTML+='<td class="dataCell' + tr.strPairStyle + '"><br /></td>';

                            // GROUPING COLUMN
                            pairHTML+= '<td colSpan="1" class="grouping-col">';
                            pairHTML+= '(' + tr.tr.Respondent__r.PID__c + ') ' + tr.tr.Respondent__r.FirstName + ' ' + tr.tr.Respondent__r.LastName;
                            pairHTML+= '</td>';

                            pairHTML+='</tr>';

                        }

                        respHTML+=pairHTML;

                    }
                        
                    strHTML+=respHTML;
                    strHTML+='</tbody>';
                    strHTML+='</table>';
                    strHTML+='<hr color="#000000" />';

                }


                j$(elWrapper).append(strHTML);

                // Run through the table and set the Tested Statuses (temp fix)
                j$('select.statusField').each(function() {
                    j$(this).val(j$(this).attr('data-oldvalue'));
                });

                var objOrder = [[ 5, "asc" ],[ 4, "asc" ]];
                if(sessionId == null) {
                    objOrder = [[ 2, "asc" ],[ 6, "asc" ],[ 5, "asc" ]];
                }

                j$(".list")
                    .DataTable({
                        "paging" : false,
                        "order" : objOrder,
                        "aoColumnDefs" : [{"sSortDataType":"dom-select","aTargets":["sort-select"]},{"sSortDataType":"dom-text-numeric","aTargets":["sort-numeric"]}]
                });

                if(G_PAIRS) {
                  j$(".list").rowGrouping({
                          iGroupingColumnIndex: 18,
                          sGroupBy: "name",
                          sGroupingColumnSortDirection: "asc",
                          bHideGroupingColumn: true
                  });
                } else {
                  j$(".grouping-col").hide();
                }

                statusHide();
            }, 
            {escape: true}
        );

    }

    ///////////////////////////////////////////////////////////////
    // WORKER FUNCTIONS
    ///////////////////////////////////////////////////////////////

    function checkIfNull(objPass) {

        strReturn = '';
        if(typeof objPass != 'undefined') { strReturn = objPass; }
        return strReturn;
    }

    function saveRespondentRow(elRow, respondentId, householdId) {

      var bolProceed = true;
      var bolRIDRequired = false;
      var arrContact = {};
      var arrRespondent = {};
      var arrHousehold = {};

      var bolChild = false;
      if(j$(elRow).hasClass('row-details')) { bolChild = true; }

      j$(elRow).find('td:first').removeClass('savedRow');
      j$(elRow).find('td:first').removeClass('dirtyRow');

      j$(elRow).find(':input').each(function(index,data) {
        
        // Store Value
        var value = j$(this).val();

        // BUSINESS LOGIC:  STATUS FIELD
        if(j$(this).hasClass('statusField')) { // Check for logic on status change
          strValRidInput = j$(elRow).find('.ridField');
          switch(value) {
            case 'In Progress':
            case 'Tested':
              bolRIDRequired = true;
              if(j$(strValRidInput).val() == '') {
                alert('You must specify a Respondent Number before you can set this respondent\'s status to \'' + value + '\'');
                j$(strValRidInput).focus();
                bolProceed = false;
              }
              j$(this).attr('data-oldvalue', j$(this).val());
              break;
            case 'Pending':
              if(j$(this).attr('data-oldvalue') == 'Tested' || j$(this).attr('data-oldvalue') == 'In Progress') {
                j$(strValRidInput).val('');
                arrRespondent['Respondent_Number__c'] = '';
              }
              break;
            default:
              break;
          }
        }

        if(!bolProceed) { return; }

        // BUSINESS LOGIC:  RESPONDENT ID FIELD
        if(j$(this).hasClass('statusField') && bolRIDRequired) { // Check for logic on status change
          elValRidInput = j$(elRow).find('.ridField');
          
          // Ensure no duplicate Respondent number in Test
          var intRCount = 0;
          j$(document).find('.ridField').each(function(index,data) {
            if((j$(this).val()) == j$(elValRidInput).val()) {
              intRCount++;
            }
          });

          if(intRCount > 1) { // It will always be 1 - the loop will find itself.
            alert('You cannot specify the same Respondent Number twice in the same Master Test!');
            j$(strValRidInput).focus();
            bolProceed = false;
          }
        }

        if(!bolProceed) { return; }

        // Parse fields into objects
        switch(j$(this).attr('data-object')) {
          case 'Contact':
            arrContact['Id'] = j$(this).attr('data-id');
            arrContact[j$(this).attr('data-field')] = value;
            break;
          case 'Test_Respondent__c':
            arrRespondent['Id'] = j$(this).attr('data-id');
            arrRespondent[j$(this).attr('data-field')] = value;
            break;
          case 'Household__c':
            arrHousehold['Id'] = j$(this).attr('data-id');
            arrHousehold[j$(this).attr('data-field')] = value;
            break;
        }

      });

      if(!bolProceed) {
        j$(elRow).find('td:first').addClass('dirtyRow');
      } else {
        // Final Data verification
        if(arrContact.Id == '') { arrContact = {}; };
        if(arrRespondent.Id == '') { arrRespondent = {}; };
        if(arrHousehold.Id == '') { arrHousehold = {}; };
        console.log(arrContact);
        console.log(arrRespondent);
        console.log(arrHousehold);

        // Set save flags and send to RemoteAction
        Visualforce.remoting.Manager.invokeAction('HostToolBulkController.saveRespondent',
            arrContact,
            arrRespondent,
            arrHousehold,
              function(result, event){
                  if (event.status) {
                    console.log('All Good, Marking Saved');
                    j$(elRow).find('td:first').addClass('savedRow');
                    if(!bolChild) { fillProgressTracker(masterTestId); }
                  } else {
                    console.log('ERROR!');
                    j$(elRow).find('td:first').addClass('dirtyRow');
                    statusHide();
                  }
              }, 
              {escape: true}
          );
      }
    }

    function statusShow() {
      j$("#dialog-modal").dialog("open");
    }

    function statusHide() {
        j$("#dialog-modal").dialog("close");
    }

    function checkForEnterPress(e) {
        if (e.keyCode == 13) {
          return true;
        } else {
          return false;
        }
    }

  </script>

    <apex:sectionHeader title="Respondents and Tests" subTitle="Host Tool" />
    <apex:pageBlock id="pbHeaderMain">
        <apex:pageBlockSection columns="2" title="Choose a Test and Session">
        <apex:pageBlockSectionItem >
            <apex:outputLabel value="Choose a Test" />
            <select id="selMasterTest" />
        </apex:pageBlockSectionItem>
        <apex:pageBlockSectionItem >
            <apex:outputLabel value="Search for Respondent" />
            <apex:outputPanel >
            <input type="text" id="txtRespSearch" size="30" />
            &nbsp;
            <input type="button" class="btn" id="btnSearch" value="Search" />
            </apex:outputPanel>
        </apex:pageBlockSectionItem>
        <apex:pageBlockSectionItem >
            <apex:outputLabel value="Choose a Session" />
            <select id="selSessions" />
        </apex:pageBlockSectionItem>
        <apex:pageBlockSectionItem >
            <apex:outputLabel value="Choose your View" />            
            <select id="selView" />            
        </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
    </apex:pageblock>

    <div id="divProgressTracker" style="min-height: 86px;">
        <apex:pageblock id="pbTracker" title="Progress Tracker (All Sessions)">
            <table id="tblProgressTracker" border="0" cellspacing="0" cellpadding="0" width="100%" class="detailList" />
        </apex:pageblock>
    </div>

    <div id="divRespondents">
        <apex:pageblock id="pbRespondents" title="Respondents">
            <apex:pageBlockButtons >
                <input type="button" class="btn" id="btnRefresh" value="Refresh" />
                <input type="button" class="btn" id="btnShowReport" value="View Show Report" />
            </apex:pageBlockButtons>
            <table id="tblRespondents" border="0" cellspacing="0" cellpadding="0" width="100%" class="detailList" />
        </apex:pageblock>
    </div>

  <div id="dialog-modal" title="Processing Request">
    <p align="center">
      Please wait while the system processes your request!
    </p>
  </div>

  <div id="dialog-quota" title="Respondent Donation/Quota Info">
    <fieldset>
      <legend>Donation Information</legend>
      <div id="fsDonation" />
    </fieldset>
    <br />
    <br />
    <fieldset>
      <legend>Quotas</legend>
      <div id="fsQuotas" />
    </fieldset>
    <br />
    <br />
    <fieldset>
      <legend>Answers and Attributes</legend>
      <div id="fsAttributes" />
    </fieldset>
  </div>

  <div id="dialog-dotchecks" title="Assign DOT Check to Respondent">
    <br />
    <table id="tblDOTChecks">
      <thead>
        <tr>
          <th>
            Action
          </th>
          <th>
            Check Amount
          </th>
          <th>
            Check Number
          </th>
        </tr>
      </thead>
      <tbody />
    </table>
  </div>
-->
</apex:page>